@startuml EWR

class Day{
-private List<Animal> animals
-private List<Hour> hour
-private List<Task> task
+public Day(String[] sqlAnimal, String[] tasks, String[] treatment)
+public PrintSchedule() : String
+public populateLists()


}


class Hour{
-private int hour
-private List<Treatment> treatment
-private List<Feed> feed
-private int volunteer

+public printHour(): String
}

class Task{
-private int TASK_ID
-private String DESCRIPTION
-private int DURATION
-private int MAX_WINDOW

+public Task(taskID:int, description:String, duration:int, maxWindow:int)
+public getTaskID(): int
+public getDescription():String
+public getDuration():int
+public getMaxWindow():int

}

class Treatment{
-private int ANIMAL_ID
-private int TASK_ID
-private int START_HOUR
+public Treatment(animalID: int, taskID: int, startHour: int)
+public getAnimalID(): int
+public getTaskID(): int
+public getStartHour(): int
}


class Animal{
-private int ANIMAL_ID
-private String ANIMAL_NICKNAME
-private boolean feed = false
-private boolean dailyClean = false
-private boolean IS_ORPHAN

+public Animal(animalID:int, animalNickname:String, orphan:boolean) 

+public isClean():boolean
+public clean(boolean)
+public isFeed():boolean
+public feed(boolean)

+public getAnimalID():int
+public getAnimalNickname():String
+public isOrphan(boolean)


}

class Nocturnal{
-private int FEED_START = 0
-private int FEED_WINDOW = 3
+public getFeedStart():int
+public getFeedWindow():int
}

class Crepuscular{
-private int FEED_START = 19
-private int FEED_WINDOW = 3
+public getFeedStart():int
+public getFeedWindow():int
}

class Diurnal{
-private int FEED_START = 8
-private int FEED_WINDOW = 3
+public getFeedStart():int
+public getFeedWindow():int
}

class Raccoon{
-private int FEED_PREP = 0
-private int FEED_TIME = 5
-private int CLEAN_TIME = 5
+public getFeedPrep():int
+public getFeedTime():int
+public getCleanTime():int
}

class Coyote{
-private int FEED_PREP = 10
-private int FEED_TIME = 5
-private int CLEAN_TIME = 5
+public getFeedPrep():int
+public getFeedTime():int
+public getCleanTime():int
}

class Fox{
-private int FEED_PREP = 5
-private int FEED_TIME = 5
-private int CLEAN_TIME = 5
+public getFeedPrep():int
+public getFeedTime():int
+public getCleanTime():int
}
class Beaver{
-private int FEED_PREP = 0
-private int FEED_TIME = 5
-private int CLEAN_TIME = 5
+public getFeedPrep():int
+public getFeedTime():int
+public getCleanTime():int
}
class Porcupine{
-private int FEED_PREP = 0
-private int FEED_TIME = 5
-private int CLEAN_TIME = 10
+public getFeedPrep():int
+public getFeedTime():int
+public getCleanTime():int
}

exception IllegalArgumentException{
}


Nocturnal *-- Fox
Nocturnal *-- Raccoon
Crepuscular *-- Coyote
Crepuscular *--Porcupine
Diurnal *-- Beaver
Animal *-- Diurnal
Animal *-- Crepuscular
Animal *-- Nocturnal

Animal ..> IllegalArgumentException: "<<throws>>"
Task ..> IllegalArgumentException: "<<throws>>"
Treatment ..> IllegalArgumentException: "<<throws>>"
Day *-- Hour
Day *-- Animal
Hour *-- Treatment
Day *-- Task

@enduml